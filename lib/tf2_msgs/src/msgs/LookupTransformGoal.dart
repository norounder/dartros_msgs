// Auto-generated. Do not edit!

// Updated: Mon Feb 19 17:02:59 2024

// (in-package tf2_msgs.msg)


// ignore_for_file: type=lint
import 'dart:convert';
import 'package:buffer/buffer.dart';
import 'package:dartros_msgutils/msg_utils.dart';

//-----------------------------------------------------------

class LookupTransformGoal extends RosMessage<LookupTransformGoal> {
  String target_frame;

  String source_frame;

  RosTime source_time;

  RosTime timeout;

  RosTime target_time;

  String fixed_frame;

  bool advanced;

  static LookupTransformGoal $prototype = LookupTransformGoal();
  LookupTransformGoal({ 
    String? target_frame,
    String? source_frame,
    RosTime? source_time,
    RosTime? timeout,
    RosTime? target_time,
    String? fixed_frame,
    bool? advanced,
  }):
  this.target_frame = target_frame ?? '',
  this.source_frame = source_frame ?? '',
  this.source_time = source_time ?? RosTime(secs: 0, nsecs: 0),
  this.timeout = timeout ?? RosTime(secs: 0, nsecs: 0),
  this.target_time = target_time ?? RosTime(secs: 0, nsecs: 0),
  this.fixed_frame = fixed_frame ?? '',
  this.advanced = advanced ?? false;

  @override
  LookupTransformGoal call({ 
    String? target_frame,
    String? source_frame,
    RosTime? source_time,
    RosTime? timeout,
    RosTime? target_time,
    String? fixed_frame,
    bool? advanced,
  }) => LookupTransformGoal(
  target_frame: target_frame,
  source_frame: source_frame,
  source_time: source_time,
  timeout: timeout,
  target_time: target_time,
  fixed_frame: fixed_frame,
  advanced: advanced,
  );

  void serialize(ByteDataWriter writer) {
    // Serializes a message object of type LookupTransformGoal
    // Serialize message field [target_frame]
    writer.writeString(target_frame);
    // Serialize message field [source_frame]
    writer.writeString(source_frame);
    // Serialize message field [source_time]
    writer.writeTime(source_time);
    // Serialize message field [timeout]
    writer.writeTime(timeout);
    // Serialize message field [target_time]
    writer.writeTime(target_time);
    // Serialize message field [fixed_frame]
    writer.writeString(fixed_frame);
    // Serialize message field [advanced]
    writer.writeUint8(advanced == false ? 0 : 1);
  }

  @override
  LookupTransformGoal deserialize(ByteDataReader reader) {
    //deserializes a message object of type LookupTransformGoal
    final data = LookupTransformGoal();
    // Deserialize message field [target_frame]
    data.target_frame = reader.readString();
    // Deserialize message field [source_frame]
    data.source_frame = reader.readString();
    // Deserialize message field [source_time]
    data.source_time = reader.readTime();
    // Deserialize message field [timeout]
    data.timeout = reader.readTime();
    // Deserialize message field [target_time]
    data.target_time = reader.readTime();
    // Deserialize message field [fixed_frame]
    data.fixed_frame = reader.readString();
    // Deserialize message field [advanced]
    data.advanced = reader.readUint8() != 0;
    return data;
  }

  int getMessageSize() {
    var length = 0;
    length += utf8.encode(target_frame).length;
    length += utf8.encode(source_frame).length;
    length += utf8.encode(fixed_frame).length;
    return length + 37;
  }

  @override
  String get fullType {
    // Returns string type for a message object
    return 'tf2_msgs/LookupTransformGoal';
  }

  @override
  String get md5sum {
    //Returns md5sum for a message object
    return '35e3720468131d675a18bb6f3e5f22f8';
  }

  @override
  String get messageDefinition {
    // Returns full string definition for message
    return '''# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#Simple API
string target_frame
string source_frame
time source_time
duration timeout

#Advanced API
time target_time
string fixed_frame

#Whether or not to use the advanced API
bool advanced


''';
  }

}

